/* FlowGraph Theme */
:root { 
  --fg-bg: #111827; 
  --fg-panel: #0b1220; 
  --fg-node: #0f1724; 
  --fg-accent: #7c3aed; 
  --fg-muted: #94a3b8; 
  --fg-text: #ffffff;
  --fg-edge: rgba(124,58,237,0.95);
  --fg-success: #10b981;
  --fg-warning: #f59e0b;
  --fg-error: #ef4444;
  
  /* Animation customization */
  --fg-animation-flowing-color: #f59e0b;
  --fg-animation-pulsing-color: #f59e0b;
  --fg-animation-data-flow-color: #f59e0b;
  
  /* Animation speeds */
  --fg-animation-speed-slow: 2.5s;
  --fg-animation-speed-normal: 1.5s;
  --fg-animation-speed-fast: 0.8s;
  
  /* Execution highlighting */
  --fg-executing-border: #ff6b6b;
  --fg-executing-shadow: rgba(255, 107, 107, 0.8);
  --fg-executing-bg: linear-gradient(135deg, rgba(255, 107, 107, 0.1), rgba(255, 107, 107, 0.05));
  --fg-executing-text: #ff6b6b;
  
  /* Trail highlighting */
  --fg-trail-opacity: 0.8;
  --fg-trail-stroke-width: 3px;
  
  /* Animation stroke widths */
  --fg-animation-stroke-width: 4px;
  --fg-animation-stroke-width-hover: 6px;
  
  /* Animation effects */
  --fg-animation-glow-intensity: 8px;
  --fg-animation-trail-glow-intensity: 6px;
  
  /* Socket customization */
  --fg-socket-size: 14px;
  --fg-socket-border-width: 2px;
  --fg-socket-border-radius: 50%;
  --fg-socket-scale-hover: 1.1;
  --fg-socket-scale-active: 1.15;
  
  /* Socket shapes - use border-radius for different shapes */
  --fg-socket-shape-circle: 50%;
  --fg-socket-shape-square: 0%;
  --fg-socket-shape-rounded: 20%;
  --fg-socket-shape-diamond: 0%;
  
  /* Socket colors */
  --fg-socket-bg-default: linear-gradient(180deg, rgba(255,255,255,0.08), rgba(255,255,255,0.03));
  --fg-socket-border-default: rgba(0,0,0,0.4);
  --fg-socket-bg-hover: linear-gradient(180deg, rgba(255,255,255,0.12), rgba(255,255,255,0.06));
  --fg-socket-bg-active: linear-gradient(180deg, var(--fg-accent), rgba(124,58,237,0.8));
  
  /* Input socket colors */
  --fg-socket-input-border: rgba(16,185,129,0.8);
  --fg-socket-input-bg: linear-gradient(180deg, rgba(16,185,129,0.3), rgba(16,185,129,0.1));
  --fg-socket-input-bg-hover: linear-gradient(180deg, rgba(16,185,129,0.6), rgba(16,185,129,0.3));
  
  /* Output socket colors */
  --fg-socket-output-border: rgba(239,68,68,0.8);
  --fg-socket-output-bg: linear-gradient(180deg, rgba(239,68,68,0.3), rgba(239,68,68,0.1));
  --fg-socket-output-bg-hover: linear-gradient(180deg, rgba(239,68,68,0.6), rgba(239,68,68,0.3));
  
  /* Socket shadows */
  --fg-socket-shadow-default: 0 2px 6px rgba(2,6,23,0.5), inset 0 1px 0 rgba(255,255,255,0.1);
  --fg-socket-shadow-hover: 0 4px 12px rgba(2,6,23,0.7), 0 0 0 2px rgba(124,58,237,0.4), inset 0 1px 0 rgba(255,255,255,0.2);
  --fg-socket-shadow-active: 0 4px 12px rgba(124,58,237,0.4), 0 0 0 3px rgba(124,58,237,0.3);
}

/* Theme variants */
flow-graph[theme="dark"] {
  --fg-bg: #111827;
  --fg-panel: #0b1220;
  --fg-node: #0f1724;
  --fg-accent: #7c3aed;
  --fg-muted: #94a3b8;
  --fg-text: #ffffff;
  --fg-edge: rgba(124,58,237,0.95);
  --fg-success: #10b981;
  --fg-warning: #f59e0b;
  --fg-error: #ef4444;
}

flow-graph[theme="light"] {
  --fg-bg: #f8fafc;
  --fg-panel: #ffffff;
  --fg-node: #ffffff;
  --fg-accent: #7c3aed;
  --fg-muted: #64748b;
  --fg-text: #1f2937;
  --fg-edge: rgba(124,58,237,0.95);
  --fg-success: #10b981;
  --fg-warning: #f59e0b;
  --fg-error: #ef4444;
}

/* ===== FLOW SURFACE ===== */
flow-graph {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: 
    /* Main grid lines */
    linear-gradient(rgba(255,255,255,0.3) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.3) 1px, transparent 1px),
    /* Minor grid lines */
    linear-gradient(rgba(255,255,255,0.15) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.15) 1px, transparent 1px);
  background-size: 
    50px 50px,  /* Main grid */
    50px 50px,  /* Main grid */
    10px 10px,  /* Minor grid */
    10px 10px;  /* Minor grid */
  background-position: 
    0 0,        /* Main grid */
    0 0,        /* Main grid */
    0 0,        /* Minor grid */
    0 0;        /* Minor grid */
  transform-origin: 0px 0px;
}

.surface {
  position: absolute;
  inset: 0;
  overflow: hidden;
  transform-origin: 0px 0px;
}

/* svg layer for edges (goes behind nodes) */
#edge-svg {
  position: absolute;
  inset: 0;
  pointer-events: none; /* so nodes can handle events */
  width: 100%; 
  height: 100%;
  overflow: visible;
  z-index: 1; /* Behind nodes */
}

#nodes-root {
  position: absolute;
  inset: 0;
  z-index: 2; /* Above edges */
}

/* ===== NODE STYLES ===== */
.node {
  position: absolute;
  min-width: 160px;
  border-radius: 12px;
  background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(255,255,255,0.01));
  border: 1px solid rgba(255,255,255,0.05);
  box-shadow: 
    0 8px 32px rgba(2,6,23,0.6),
    inset 0 1px 0 rgba(255,255,255,0.05);
  transform-origin: 0 0;
  user-select: none;
  cursor: grab;
  backdrop-filter: blur(8px);
}

.node.dragging { 
  cursor: grabbing; 
  box-shadow: 
    0 12px 48px rgba(2,6,23,0.8),
    inset 0 1px 0 rgba(255,255,255,0.1);
  transform: scale(1.02);
}

.node.selected {
  border-color: var(--fg-accent);
  box-shadow: 
    0 8px 32px rgba(2,6,23,0.6),
    0 0 0 2px rgba(124,58,237,0.3),
    inset 0 1px 0 rgba(255,255,255,0.05);
}

.node .title { 
  font-weight: 600; 
  font-size: 14px; 
  margin-bottom: 8px; 
  color: var(--fg-muted);
  padding: 12px 16px 8px;
  background: linear-gradient(90deg, rgba(124,58,237,0.1), transparent);
  border-bottom: 1px solid rgba(255,255,255,0.05);
  border-radius: 12px 12px 0 0;
}

.node .body { 
  font-size: 13px; 
  color: #cbd5e1;
  padding: 12px 16px;
}

/* Node color patches - Applied via data attributes from node definitions */
.node[data-color-patch] .title {
  background: var(--node-color-bg, linear-gradient(90deg, rgba(124,58,237,0.15), transparent));
  color: var(--node-color-text, var(--fg-accent));
}

/* Default title styling */
.node .title {
  font-weight: 600;
  font-size: 14px;
  margin-bottom: 8px;
  color: var(--fg-muted);
  padding: 12px 16px 8px;
  background: linear-gradient(90deg, rgba(124,58,237,0.1), transparent);
  border-bottom: 1px solid rgba(255,255,255,0.05);
  border-radius: 12px 12px 0 0;
}

/* Input box styles */
.input-box {
  width: 100%;
  padding: 6px 8px;
  border: 1px solid rgba(255,255,255,0.2);
  border-radius: 6px;
  background: rgba(255,255,255,0.05);
  color: #fff;
  font-size: 12px;
  outline: none;
  transition: all 0.2s ease;
  margin: 4px 0;
  pointer-events: auto;
  cursor: text;
}

.input-box:focus {
  border-color: var(--fg-accent);
  background: rgba(255,255,255,0.1);
}

.input-box::placeholder {
  color: rgba(255,255,255,0.5);
}

.line {
  margin: 4px 0;
}

/* ===== SOCKET STYLES ===== */
.socket {
  width: var(--fg-socket-size); 
  height: var(--fg-socket-size); 
  border-radius: var(--fg-socket-border-radius);
  background: var(--fg-socket-bg-default);
  border: var(--fg-socket-border-width) solid var(--fg-socket-border-default);
  display: inline-block;
  vertical-align: middle;
  margin-right: 8px;
  box-shadow: var(--fg-socket-shadow-default);
  cursor: pointer;
  position: relative;
  transition: all 0.2s ease;
}

.socket:hover {
  transform: scale(var(--fg-socket-scale-hover));
  background: var(--fg-socket-bg-hover);
  box-shadow: var(--fg-socket-shadow-hover);
}

.socket.socket-active {
  background: var(--fg-socket-bg-active);
  box-shadow: var(--fg-socket-shadow-active);
  transform: scale(var(--fg-socket-scale-active));
}

.socket.socket-hover {
  background: var(--fg-socket-input-bg-hover);
  box-shadow: var(--fg-socket-shadow-hover);
  transform: scale(var(--fg-socket-scale-hover));
}

/* Socket type indicators and colors */
.socket.in { 
  border-color: var(--fg-socket-input-border);
  background: var(--fg-socket-input-bg);
}

.socket.out { 
  float: right; 
  margin-right: 0; 
  margin-left: 8px;
  border-color: var(--fg-socket-output-border);
  background: var(--fg-socket-output-bg);
}

.socket.in:hover {
  background: var(--fg-socket-input-bg-hover);
  box-shadow: var(--fg-socket-shadow-hover);
}

.socket.out:hover {
  background: var(--fg-socket-output-bg-hover);
  box-shadow: var(--fg-socket-shadow-hover);
}

/* Socket shape variants */
.socket.shape-circle {
  border-radius: var(--fg-socket-shape-circle);
}

.socket.shape-square {
  border-radius: var(--fg-socket-shape-square);
}

.socket.shape-rounded {
  border-radius: var(--fg-socket-shape-rounded);
}

.socket.shape-diamond {
  border-radius: var(--fg-socket-shape-diamond);
  transform: rotate(45deg);
}

.socket.shape-diamond:hover,
.socket.shape-diamond.socket-active {
  transform: rotate(45deg) scale(var(--fg-socket-scale-hover));
}

/* ===== CONNECTION STYLES ===== */
.connection {
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
}

.connection:hover {
  stroke-width: 4 !important;
  filter: drop-shadow(0 4px 8px rgba(124,58,237,0.4));
}

.temp-connection {
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
}

.edge {
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
}

.edge:hover {
  stroke-width: 4 !important;
  filter: drop-shadow(0 4px 8px rgba(124,58,237,0.4));
}

/* Interactive elements in nodes */
.interactive {
  pointer-events: auto !important;
  cursor: auto;
}

.interactive:hover {
  /* Ensure interactive elements show proper hover states */
  opacity: 0.8;
}

canvas.interactive {
  cursor: grab;
}

canvas.interactive:active {
  cursor: grabbing;
}

button.interactive:hover {
  opacity: 0.8;
  transform: translateY(-1px);
}

/* ===== SELECTION STYLES ===== */
.node.selected {
  box-shadow: 0 0 0 2px var(--fg-accent);
  border-color: var(--fg-accent);
}

.edge.selected {
  stroke: var(--fg-accent) !important;
  stroke-width: 3px !important;
  filter: drop-shadow(0 0 4px var(--fg-accent));
}

/* ===== NODE EXECUTION HIGHLIGHTING ===== */
.node.executing {
  box-shadow: 0 0 20px var(--fg-executing-shadow) !important;
  border: 2px solid var(--fg-executing-border) !important;
  background: var(--fg-executing-bg) !important;
}

.node.executing .title {
  color: var(--fg-executing-text) !important;
  font-weight: bold;
}

/* Different highlighting colors for different animation styles */
.node.executing.flowing {
  box-shadow: 0 0 20px var(--fg-animation-flowing-color, 0.8) !important;
  border: 2px solid var(--fg-animation-flowing-color) !important;
  background: linear-gradient(135deg, color-mix(in srgb, var(--fg-animation-flowing-color) 10%, transparent), color-mix(in srgb, var(--fg-animation-flowing-color) 5%, transparent)) !important;
}

.node.executing.flowing .title {
  color: var(--fg-animation-flowing-color) !important;
}

.node.executing.pulsing {
  box-shadow: 0 0 20px color-mix(in srgb, var(--fg-animation-pulsing-color) 80%, transparent) !important;
  border: 2px solid var(--fg-animation-pulsing-color) !important;
  background: linear-gradient(135deg, color-mix(in srgb, var(--fg-animation-pulsing-color) 10%, transparent), color-mix(in srgb, var(--fg-animation-pulsing-color) 5%, transparent)) !important;
}

.node.executing.pulsing .title {
  color: var(--fg-animation-pulsing-color) !important;
}

.node.executing.data-flow {
  box-shadow: 0 0 20px color-mix(in srgb, var(--fg-animation-data-flow-color) 80%, transparent) !important;
  border: 2px solid var(--fg-animation-data-flow-color) !important;
  background: linear-gradient(135deg, color-mix(in srgb, var(--fg-animation-data-flow-color) 10%, transparent), color-mix(in srgb, var(--fg-animation-data-flow-color) 5%, transparent)) !important;
}

.node.executing.data-flow .title {
  color: var(--fg-animation-data-flow-color) !important;
}

/* ===== EDGE ANIMATIONS ===== */
.edge.flowing {
  stroke: var(--fg-animation-flowing-color) !important;
  stroke-width: var(--fg-animation-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-glow-intensity) var(--fg-animation-flowing-color));
  animation: edgeFlow var(--fg-animation-speed-normal) ease-in-out infinite;
}

/* ===== EXECUTION TRAIL HIGHLIGHTING ===== */
.edge.trail.flowing {
  stroke: var(--fg-animation-flowing-color) !important;
  stroke-width: var(--fg-trail-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-trail-glow-intensity) var(--fg-animation-flowing-color));
  opacity: var(--fg-trail-opacity);
  /* Remove any animations for trail edges */
  animation: none !important;
}

.edge.trail.pulsing {
  stroke: var(--fg-animation-pulsing-color) !important;
  stroke-width: var(--fg-trail-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-trail-glow-intensity) var(--fg-animation-pulsing-color));
  opacity: var(--fg-trail-opacity);
  /* Remove any animations for trail edges */
  animation: none !important;
}

.edge.trail.data-flow {
  stroke: var(--fg-animation-data-flow-color) !important;
  stroke-width: var(--fg-trail-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-trail-glow-intensity) var(--fg-animation-data-flow-color));
  opacity: var(--fg-trail-opacity);
  /* Remove any animations for trail edges */
  animation: none !important;
}

.edge.flowing-fast {
  animation: edgeFlow var(--fg-animation-speed-fast) ease-in-out infinite;
}

.edge.flowing-slow {
  animation: edgeFlow var(--fg-animation-speed-slow) ease-in-out infinite;
}

@keyframes edgeFlow {
  0% {
    stroke-dasharray: 0 20;
    stroke-dashoffset: 0;
    opacity: 0.6;
  }
  50% {
    stroke-dasharray: 10 10;
    stroke-dashoffset: -10;
    opacity: 1;
  }
  100% {
    stroke-dasharray: 0 20;
    stroke-dashoffset: -20;
    opacity: 0.6;
  }
}

/* Alternative pulse animation */
.edge.pulsing {
  stroke: var(--fg-animation-pulsing-color) !important;
  stroke-width: var(--fg-animation-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-glow-intensity) var(--fg-animation-pulsing-color));
  animation: edgePulse var(--fg-animation-speed-normal) ease-in-out infinite;
}

@keyframes edgePulse {
  0%, 100% {
    stroke-width: 2px;
    opacity: 0.7;
  }
  50% {
    stroke-width: 4px;
    opacity: 1;
  }
}

/* Data flow animation with moving dots */
.edge.data-flow {
  stroke: var(--fg-animation-data-flow-color) !important;
  stroke-width: var(--fg-animation-stroke-width) !important;
  filter: drop-shadow(0 0 var(--fg-animation-glow-intensity) var(--fg-animation-data-flow-color));
  animation: dataFlow var(--fg-animation-speed-slow) linear infinite;
}

@keyframes dataFlow {
  0% {
    stroke-dasharray: 0 30;
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dasharray: 0 30;
    stroke-dashoffset: -30;
  }
}

/* ===== DRAGGING STYLES ===== */
.node.dragging {
  opacity: 0.8;
  transform: scale(1.02);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  z-index: 1000;
}

/* ===== CONTEXT MENU STYLES ===== */
/* Note: Context menu styles are defined in their respective components due to Shadow DOM */

/* Hide definitions */
flow-definitions {
  display: none !important;
}

/* ===== READONLY MODE ===== */

/* Disable interactions in readonly mode */
.surface.readonly .socket {
  cursor: not-allowed !important;
  opacity: 0.7;
}

.surface.readonly .node {
  cursor: default !important;
}

.surface.readonly .node:hover {
  transform: none !important;
}